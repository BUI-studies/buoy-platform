name: CI & Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened]

  push:
    branches: [main]

  workflow_dispatch: {}

env:
  APP_DIR: /var/www/buoy # remote folder holding the server
  PM2_APP: buoy # pm2 process label

jobs:
  # ───────────────────────────── 1) BUILD ─────────────────────────────
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: 🟢 Setup Node LTS
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: yarn

      # root install without recursive script, then per-package installs
      - name: 📦 Install deps (mono-repo, safe)
        run: |
          yarn install --frozen-lockfile --ignore-scripts
          (cd client && yarn install --frozen-lockfile)
          (cd server && yarn install --frozen-lockfile)

      - name: 🏗️  Build project
        run: yarn build # root build script

      - name: 🗜️  Package production bundle
        run: |
          mkdir -p deploy
          cp server/package.json server/yarn.lock deploy/
          cp -r server/dist deploy/dist
          tar -czf bundle.tar.gz -C deploy .

      - name: 📡 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bundle
          path: bundle.tar.gz
          retention-days: 7

  # ───────────────────────────── 2) DEPLOY ─────────────────────────────
  deploy:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Download artifact
        uses: actions/download-artifact@v4
        with:
          name: bundle
          path: .

      # —— secure copy via Appleboy (key + passphrase) ——
      - name: 🚚 SCP bundle to droplet
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          passphrase: ${{ secrets.DO_SSH_PASSPHRASE }}
          port: ${{ secrets.DO_SSH_PORT }}
          source: 'bundle.tar.gz'
          target: '${{ env.APP_DIR }}/'

      # —— remote deploy commands over SSH (same passphrase-aware action) ——
      - name: 🚀 Remote untar & PM2 reload
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          passphrase: ${{ secrets.DO_SSH_PASSPHRASE }}
          port: ${{ secrets.DO_SSH_PORT }}
          script: |
            set -e
            APP_DIR="${{ env.APP_DIR }}"
            PM2_APP="${{ env.PM2_APP }}"

            cd "$APP_DIR"
            tar -xzf bundle.tar.gz
            rm bundle.tar.gz

            # install prod deps if first run or lockfile newer
            if [ ! -d node_modules ] || [ deploy/yarn.lock -nt node_modules ]; then
              yarn install --production --frozen-lockfile
            fi

            # start or reload via PM2
            if pm2 ls | grep -q "$PM2_APP"; then
              pm2 reload "$PM2_APP"
            else
              pm2 start dist/index.js --name "$PM2_APP"
              pm2 save
            fi
