name: CI & Deploy

on:
  # PRs trigger a full build (no deploy)
  pull_request:
    types: [opened, synchronize, reopened]

  # Only pushes to main trigger the actual production deploy
  push:
    branches: [main]

  # Manual button in the Actions tab
  workflow_dispatch: {}

env:
  APP_DIR: /var/www/buoy # where the server lives on the droplet
  PM2_APP: buoy # pm2 process name

jobs:
  build-and-maybe-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️  Checkout
        uses: actions/checkout@v4

      - name: 🟢 Setup Node LTS
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: yarn

      - name: 📦 Install & Build mono-repo
        run: |
          yarn install --frozen-lockfile
          yarn build                      # root build: client → server → copy

      - name: 🗜️  Tar production bundle
        run: |
          mkdir -p deploy
          cp server/package.json server/yarn.lock deploy/
          cp -r server/dist deploy/dist
          tar -czf bundle.tar.gz -C deploy .

      # ───────────────────────────────────────────────
      # Everything below ONLY runs on pushes to main
      # ───────────────────────────────────────────────
      - name: ⏭️  Skip deploy on PRs
        if: github.event_name == 'pull_request'
        run: echo "PR build — tests pass, deploy skipped."

      - name: 🛂 Start SSH agent & add key
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DO_SSH_KEY }}

      - name: 🏗️  Rsync bundle to droplet
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          rsync -avz --delete \
            -e "ssh -o StrictHostKeyChecking=no -p ${{ secrets.DO_SSH_PORT }}" \
            bundle.tar.gz ${{ secrets.DO_USER }}@${{ secrets.DO_HOST }}:${{ env.APP_DIR }}/

      - name: 🚀 Remote deploy & PM2 reload
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.DO_SSH_PORT }} \
            ${{ secrets.DO_USER }}@${{ secrets.DO_HOST }} << 'EOSSH'
            set -e
            cd $APP_DIR
            tar -xzf bundle.tar.gz
            rm bundle.tar.gz

            # install prod deps once or when lockfile changes
            if [ ! -d node_modules ] || [ deploy/yarn.lock -nt node_modules ]; then
              yarn install --production --frozen-lockfile
            fi

            # start or reload via PM2
            if pm2 ls | grep -q $PM2_APP; then
              pm2 reload $PM2_APP
            else
              pm2 start dist/index.js --name $PM2_APP
              pm2 save
            fi
          EOSSH
