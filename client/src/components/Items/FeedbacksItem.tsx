import { FC, PropsWithChildren } from 'react'

import { Feedback, Meeting, MentorDTO } from '@/api'
import { dateParser } from '@/utils'
import { feedbacksReactionsMap } from '@/helpers'

import { typeToColorMap } from './Items.helper'
import classes from './Items.module.scss'

type FeedbackItemProps = {
	data: Feedback
}

const FeedbacksItem: FC<PropsWithChildren & FeedbackItemProps> = ({ data }) => {
	const {
		date: dateSrc,
		meeting,
		comment,
		impression,
		understanding,
		mentoring,
		selfFeeling,
		teamwork,
		insides,
		downsides,
		isMentorVisible,
	} = data
	const date = dateParser(dateSrc)
	const mentorVisibilityClasses = [
		classes.isMentorVisible,
		classes[`isMentorVisible${isMentorVisible ? 'Show' : 'Hide'}`],
	].join(' ')

	return (
		<div className={classes.wrapper}>
			<h2 className={classes.titleWrapper}>
				<span
					className={mentorVisibilityClasses}
					title={isMentorVisible ? '–ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ –º–µ–Ω—Ç–æ—Ä—É' : '–º–µ–Ω—Ç–æ—Ä —Ü—å–æ–≥–æ –Ω–µ –ø–æ–±–∞—á–∏—Ç—å'}
				>
					{isMentorVisible ? 'üëÄ' : 'üôà'}
				</span>
				–ö–æ–º–µ–Ω—Ç–∞—Ä –ø–æ –∑—É—Å—Ç—Ä—ñ—á—ñ - <span className="text-teal-500 underline">"{meeting.title}"</span>
			</h2>

			<div className={classes.badges}>
				<p className={[classes.badgesItem, typeToColorMap[meeting.type]].join(' ')}>
					{meeting.type}
				</p>
				<p className={classes.badgesItem}>{(meeting.mentor as MentorDTO).fullName}</p>
			</div>

			<div>
				<p className={classes.commentTitle}>–î–∞—Ç–∞:{date}</p>
				<div>
					<p className={classes.commentTitle}>–í—Ä–∞–∂–µ–Ω–Ω—è:</p>
					<p className={classes.comment}>
						{feedbacksReactionsMap.impressions.find(imp => imp.value === impression)?.label ||
							'...–∞ —à–æ—Å—å –Ω–µ–º–∞ –Ω—ñ—á–æ...'}
					</p>
				</div>
				<div>
					<p className={classes.commentTitle}>–†–æ–∑—É–º—ñ–Ω–Ω—è:</p>
					<p className={classes.comment}>
						{feedbacksReactionsMap.understanding.find(imp => imp.value === understanding)?.label ||
							'...–∞ —à–æ—Å—å –Ω–µ–º–∞ –Ω—ñ—á–æ...'}
					</p>
				</div>
				<div>
					<p className={classes.commentTitle}>–®–æ —Ç–∞–º –º–µ–Ω—Ç–æ—Ä:</p>
					<p className={classes.comment}>
						{feedbacksReactionsMap.mentoring.find(imp => imp.value === mentoring)?.label ||
							'...–∞ —à–æ—Å—å –Ω–µ–º–∞ –Ω—ñ—á–æ...'}
					</p>
				</div>
				<div>
					<p className={classes.commentTitle}>–ê —Å–∞–º —è–∫:</p>
					<p className={classes.comment}>
						{feedbacksReactionsMap.selfFeeling.find(imp => imp.value === selfFeeling)?.label ||
							'...–∞ —à–æ—Å—å –Ω–µ–º–∞ –Ω—ñ—á–æ...'}
					</p>
				</div>
				<div>
					<p className={classes.commentTitle}>–¢—ñ–º–≤–æ—Ä–∫:</p>
					<p className={classes.comment}>
						{feedbacksReactionsMap.teamwork.find(imp => imp.value === teamwork)?.label ||
							'...–∞ —à–æ—Å—å –Ω–µ–º–∞ –Ω—ñ—á–æ...'}
					</p>
				</div>
				<div>
					<p className={classes.commentTitle}>–Ü–Ω—Å–∞–π–¥–∏:</p>
					<p className={classes.comment}>{insides}</p>
				</div>
				<div>
					<p className={classes.commentTitle}>–î–µ –º–∏ –ª–æ—Ö–∏:</p>
					<p className={classes.comment}>{downsides}</p>
				</div>
				<div>
					<p className={classes.commentTitle}>–ö–æ–º–µ–Ω—Ç–∞—Ä:</p>
					<p className={classes.comment}>{comment}</p>
				</div>
			</div>
		</div>
	)
}

export default FeedbacksItem
